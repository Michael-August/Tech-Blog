{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/services/post.services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/services/auth-area.service\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"newComment\"];\n\nfunction CommentComponent_img_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 13);\n  }\n}\n\nfunction CommentComponent_div_21_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 22);\n  }\n}\n\nfunction CommentComponent_div_21_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 18);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 19);\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7, \"Reply\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9, \"Share\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\");\n    i0.ɵɵtext(11, \"Likes \");\n    i0.ɵɵelementStart(12, \"span\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comment_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r3 == null ? null : comment_r3.replies.userName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r3 == null ? null : comment_r3.replies.comment);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(comment_r3 == null ? null : comment_r3.replies == null ? null : comment_r3.replies.likes);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"color\": a0\n  };\n};\n\nfunction CommentComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"img\", 15);\n    i0.ɵɵtemplate(2, CommentComponent_div_21_img_2_Template, 1, 0, \"img\", 16);\n    i0.ɵɵelementStart(3, \"div\", 17);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 18);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 19);\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10, \"Reply\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵtext(12, \"Share\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\", 20);\n    i0.ɵɵlistener(\"click\", function CommentComponent_div_21_Template_p_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const comment_r3 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.clickLike(comment_r3 == null ? null : comment_r3.id);\n    });\n    i0.ɵɵtext(14, \"Likes \");\n    i0.ɵɵelementStart(15, \"span\");\n    i0.ɵɵtext(16, \"1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, CommentComponent_div_21_div_17_Template, 14, 3, \"div\", 21);\n    i0.ɵɵelement(18, \"hr\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const comment_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", comment_r3 == null ? null : comment_r3.profilePics, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !comment_r3.profilePics);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(comment_r3 == null ? null : comment_r3.userName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r3 == null ? null : comment_r3.comment);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c1, (comment_r3 == null ? null : comment_r3.liked) ? \"blue\" : \"gray\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", comment_r3 == null ? null : comment_r3.replies);\n  }\n}\n\nexport let CommentComponent = /*#__PURE__*/(() => {\n  class CommentComponent {\n    // getAComment = this.comments.find(i => {return i.id})\n    constructor(postSrv, route, authSrv) {\n      this.postSrv = postSrv;\n      this.route = route;\n      this.authSrv = authSrv;\n      this.comments = [];\n      this.newComment = new EventEmitter();\n      this.like = new EventEmitter();\n      this.singlePost = null;\n      this.loggedInUser = null;\n    }\n\n    ngOnInit() {\n      this.comments;\n      this.postSrv.getPostById(this.route.snapshot.params['id']).subscribe(res => {\n        this.singlePost = res;\n      });\n      this.getLoggedInUser();\n    }\n\n    likeFunc(id) {\n      let getAComment = this.comments.find(i => {\n        return i.id === id;\n      });\n      console.log('id:', id, 'comment:', getAComment.id);\n\n      if (getAComment.likes) {\n        let index = getAComment.likes.indexOf(this.loggedInUser.email);\n\n        if (index === -1) {\n          getAComment.likes.push(this.loggedInUser.email);\n          getAComment.liked = true;\n        } else {\n          getAComment.likes.splice(index, 1);\n          getAComment.liked = false;\n        }\n\n        console.log(getAComment.likes);\n      } else {\n        getAComment.likes = [this.loggedInUser.email];\n        console.log(getAComment.likes);\n        getAComment.liked = true;\n      }\n    }\n\n    clickLike(commentId) {\n      this.like.emit(this.likeFunc(commentId));\n    }\n\n    getLoggedInUser() {\n      let user = localStorage.getItem('logedIn');\n      let parsed = JSON.parse(user);\n      this.authSrv.getSignedUpUsers().subscribe(res => {\n        let allUsers = res;\n        console.log(allUsers);\n        this.loggedInUser = allUsers.find(u => {\n          return u.email === parsed.email && u.password === parsed.password;\n        });\n        console.log(this.loggedInUser);\n      });\n    }\n\n    addNewComment(newComment) {\n      const comment = {\n        postId: this.singlePost.id,\n        userName: `${this.loggedInUser.firstName + ' ' + this.loggedInUser.lastName}`,\n        comment: newComment,\n        profilePics: `${this.loggedInUser.img}`\n      };\n      this.newComment.emit(comment);\n    }\n\n    getNumberOfComments() {\n      var _a;\n\n      return (_a = this.comments) === null || _a === void 0 ? void 0 : _a.length;\n    }\n\n  }\n\n  CommentComponent.ɵfac = function CommentComponent_Factory(t) {\n    return new (t || CommentComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.AuthAreaService));\n  };\n\n  CommentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CommentComponent,\n    selectors: [[\"comment\"]],\n    viewQuery: function CommentComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.commentForm = _t.first);\n      }\n    },\n    inputs: {\n      comments: \"comments\"\n    },\n    outputs: {\n      newComment: \"newComment\",\n      like: \"like\"\n    },\n    decls: 22,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"card\"], [1, \"card-header\"], [1, \"row\"], [1, \"col-md-6\"], [\"src\", \"\", \"alt\", \"Profile pics of all those that commented\"], [1, \"card-body\"], [1, \"form-group\", \"card-title\", 3, \"keyup.enter\"], [\"alt\", \"profile pics of logged in user\", 1, \"loggedUser\", 3, \"src\"], [\"src\", \"assets/img/remote.jpg\", \"alt\", \"profile pics of logged in user\", \"class\", \"loggedUser\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"\", \"id\", \"\", \"placeholder\", \"Add a Comment\"], [\"newComment\", \"\"], [\"class\", \"comments-area d-flex\", 4, \"ngFor\", \"ngForOf\"], [\"src\", \"assets/img/remote.jpg\", \"alt\", \"profile pics of logged in user\", 1, \"loggedUser\"], [1, \"comments-area\", \"d-flex\"], [\"alt\", \"\", 1, \"comment-img\", 3, \"src\"], [\"src\", \"assets/img/remote.jpg\", \"alt\", \"\", \"class\", \"comment-img\", 4, \"ngIf\"], [1, \"write-ups\"], [1, \"comment\"], [1, \"misc\", \"d-flex\"], [3, \"ngStyle\", \"click\"], [\"class\", \"replies\", 4, \"ngIf\"], [\"src\", \"assets/img/remote.jpg\", \"alt\", \"\", 1, \"comment-img\"], [1, \"replies\"]],\n    template: function CommentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r9 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 0);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"h3\");\n        i0.ɵɵtext(7, \"Comments \");\n        i0.ɵɵelementStart(8, \"span\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\");\n        i0.ɵɵtext(11, \"No insults please. Be kind with your words!.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4);\n        i0.ɵɵelement(13, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 6);\n        i0.ɵɵelementStart(15, \"div\", 7);\n        i0.ɵɵlistener(\"keyup.enter\", function CommentComponent_Template_div_keyup_enter_15_listener() {\n          i0.ɵɵrestoreView(_r9);\n\n          const _r1 = i0.ɵɵreference(20);\n\n          return ctx.addNewComment(_r1.value);\n        });\n        i0.ɵɵelementStart(16, \"Label\");\n        i0.ɵɵelement(17, \"img\", 8);\n        i0.ɵɵtemplate(18, CommentComponent_img_18_Template, 1, 0, \"img\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 10, 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, CommentComponent_div_21_Template, 19, 8, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\"(\", ctx.getNumberOfComments(), \")\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"src\", ctx.loggedInUser.img, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loggedInUser.img);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.comments);\n      }\n    },\n    directives: [i4.NgIf, i4.NgForOf, i4.NgStyle],\n    styles: [\"p[_ngcontent-%COMP%]{font-size:17px;font-weight:600}input[_ngcontent-%COMP%]{padding:14px;margin-left:-15%;width:70%;border-radius:8px;font-size:14px}.comment-img[_ngcontent-%COMP%]{width:8%;-webkit-clip-path:circle();clip-path:circle();height:20%}.loggedUser[_ngcontent-%COMP%]{-webkit-clip-path:circle();clip-path:circle();width:24%}.write-ups[_ngcontent-%COMP%]{margin-left:1.5em}.comment[_ngcontent-%COMP%]{margin-top:-10px;font-size:17px;color:gray}.misc[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:14px;color:gray;margin-right:10px;cursor:pointer}.card-body[_ngcontent-%COMP%]{width:100%}.replies[_ngcontent-%COMP%]{margin-left:20px}\"]\n  });\n  return CommentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}